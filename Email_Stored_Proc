CREATE PROCEDURE dbo.GetDailyPayorSummary
AS
BEGIN
    DECLARE @EmailBody VARCHAR(MAX);  -- Using VARCHAR
    SET @EmailBody = '';  -- Initialize to an empty string

    -- Start HTML table structure with inline CSS styling for a polished look
    SET @EmailBody = 
        '<html><body>' +
        '<h2 style="color:#2E86C1;">Daily Payor Table Summary</h2>' +
        '<table border="1" cellspacing="0" cellpadding="5" style="border-collapse:collapse; width:100%; font-family: Arial, sans-serif;">' +
        '<thead style="background-color:#2E86C1; color:#FFFFFF;">' +
        '<tr><th style="padding:8px;">Payor</th><th>Most Recent InsertDateTime</th><th>EffectiveKey</th><th>RowCount</th><th>SourceFileName</th></tr>' +
        '</thead><tbody>';

    -- Populate EmailBody with data from tables
    SET @EmailBody += ISNULL((
        SELECT 
            STRING_AGG(
                '<tr style="background-color:' + 
                CASE WHEN (ROW_NUMBER() OVER (ORDER BY InsertDateTime DESC) % 2 = 0) THEN '#F2F2F2' ELSE '#FFFFFF' END + 
                ';">' +
                '<td style="padding:8px;">' + Payor + '</td>' +
                '<td style="padding:8px;">' + CONVERT(VARCHAR, InsertDateTime, 120) + '</td>' +
                '<td style="padding:8px;">' + CAST(EffectiveKey AS VARCHAR) + '</td>' +
                '<td style="padding:8px;">' + CAST(RowCount AS VARCHAR) + '</td>' +
                '<td style="padding:8px;">' + ISNULL(SourceFileName, '') + '</td></tr>', 
                '') 
        FROM (
            SELECT TOP 1 'Aetna' AS Payor, InsertDateTime, EffectiveKey, RowCount, SourceFileName FROM Aetna ORDER BY InsertDateTime DESC
            UNION ALL
            SELECT TOP 1 'Anthem' AS Payor, InsertDateTime, EffectiveKey, RowCount, SourceFileName FROM Anthem ORDER BY InsertDateTime DESC
            UNION ALL
            SELECT TOP 1 'Cigna' AS Payor, InsertDateTime, EffectiveKey, RowCount, SourceFileName FROM Cigna ORDER BY InsertDateTime DESC
        ) AS PayorData
    ), '<tr><td colspan="5" style="text-align:center;">No data available</td></tr>');

    -- Close the HTML structure
    SET @EmailBody += '</tbody></table></body></html>';

    -- Output the EmailBody
    SELECT @EmailBody AS EmailBody;  -- This should match SSIS variable name
END;



public void Main()
{
    // Cast the EmailBody variable from Object to String
    string emailBody = string.Empty;

    // Check if EmailBody is not null and convert
    if (Dts.Variables["User::EmailBody"].Value != null)
    {
        emailBody = Dts.Variables["User::EmailBody"].Value.ToString();
    }

    // Assign the email body to the new string variable
    Dts.Variables["User::EmailBodyString"].Value = emailBody;

    Dts.TaskResult = (int)ScriptResults.Success;
}
